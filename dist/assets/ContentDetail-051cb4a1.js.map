{"version":3,"file":"ContentDetail-051cb4a1.js","sources":["../../src/views/ContentDetail.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\n\r\nimport { ContentBodySchema, ContentDetail, ContentType } from \"types/common\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport api from \"api/api_rtk\";\r\n\r\nconst contentDetailDefault: ContentDetail = {\r\n  title: \"\",\r\n  description: \"\",\r\n  contentTypeId: -1,\r\n  contentTypeName: \"\",\r\n  creator: \"\",\r\n  createdAt: \"-\",\r\n  updatedAt: \"-\",\r\n  deletedAt: \"\",\r\n  status: \"draft\",\r\n  body: {},\r\n  tags: [],\r\n};\r\n\r\nfunction ContentDetailPage() {\r\n  const contentId = useParams().contentId;\r\n\r\n  const [fetchContentDetail, contentDetailResponse] =\r\n    api.useLazyGetContentDetailQuery();\r\n\r\n  const [contentTypeDetailTrigger, contentTypeDetailResult] =\r\n    api.useLazyGetContentTypeDetailQuery();\r\n\r\n  const [triggerPatchContent, patchContentResponse] =\r\n    api.usePutContentMutation();\r\n\r\n  const [contentDetail, setContentDetail] =\r\n    useState<ContentDetail>(contentDetailDefault);\r\n\r\n  const [contentBodySchema, setContentBodySchema] = useState<\r\n    ContentBodySchema[]\r\n  >([]);\r\n\r\n  const handleContentDetailChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const key = event.target.name as keyof ContentDetail;\r\n    const value = event.target.value;\r\n\r\n    setContentDetail((prevState) => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const handleBodyChange = (key: string, value: string) => {\r\n    setContentDetail((prevState) => ({\r\n      ...prevState,\r\n      body: { ...prevState.body, [key]: value },\r\n    }));\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const res = triggerPatchContent({\r\n        ...contentDetail,\r\n        contentId: Number(contentId) ?? -1,\r\n      })\r\n        .unwrap()\r\n        .then((response) => {\r\n          alert(`성공 : ${response.message}`);\r\n        });\r\n    } catch (e) {\r\n      alert(`rejected`);\r\n    }\r\n  };\r\n\r\n  const getContentDetail = async (contentId: number) => {\r\n    const res = (await fetchContentDetail(contentId).unwrap()) as ContentDetail;\r\n    const contentTypeDetailRes = await contentTypeDetailTrigger(\r\n      Number(res.contentTypeId)\r\n    ).unwrap();\r\n\r\n    setContentBodySchema(contentTypeDetailRes.contentBodySchema);\r\n    setContentDetail(res);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (contentId) {\r\n      getContentDetail(Number(contentId));\r\n    }\r\n  }, [contentId]);\r\n\r\n  return (\r\n    <main className=\"workspace\">\r\n      {/* Breadcrumb */}\r\n      <section className=\"breadcrumb\">\r\n        <h1>Content Detail</h1>\r\n      </section>\r\n\r\n      <div className=\"\">\r\n        {/* content type Select */}\r\n        <div className=\"relative p-4\">\r\n          {/* Content */}\r\n          <div>\r\n            <div>\r\n              <fieldset>\r\n                <div>\r\n                  <label htmlFor=\"contentTypeSelect\">콘텐츠 타입 선택</label>\r\n                  <select name=\"contentTypeSelect\" disabled>\r\n                    <option>{contentDetail.contentTypeName}</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                {/* content meta */}\r\n                <div>\r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <input\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    onChange={handleContentDetailChange}\r\n                    value={contentDetail.title}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"creator\">Creator</label>\r\n                  <input\r\n                    id=\"creator\"\r\n                    name=\"creator\"\r\n                    type=\"text\"\r\n                    onChange={handleContentDetailChange}\r\n                    value={contentDetail.creator}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"description\">Description</label>\r\n                  <input\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    onChange={handleContentDetailChange}\r\n                    value={contentDetail.description}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"p-4\">\r\n                  <label className=\"block mb-2\" htmlFor=\"status\">\r\n                    Status\r\n                  </label>\r\n\r\n                  <label>\r\n                    <input\r\n                      onChange={handleContentDetailChange}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"draft\"\r\n                      className={`p-4 ${\r\n                        contentDetail.status === \"draft\"\r\n                          ? \"bg-primary\"\r\n                          : \"bg-secondary\"\r\n                      }`}\r\n                    ></input>\r\n                    draft\r\n                  </label>\r\n\r\n                  <label>\r\n                    <input\r\n                      onChange={handleContentDetailChange}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"publish\"\r\n                      className={`p-4 ${\r\n                        contentDetail.status === \"publish\"\r\n                          ? \"bg-primary\"\r\n                          : \"bg-secondary\"\r\n                      }`}\r\n                    ></input>\r\n                    publish\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <label htmlFor=\"title\">\r\n                    createdAt : {contentDetail.createdAt}\r\n                  </label>\r\n                  <label htmlFor=\"title\">\r\n                    updatedAt : {contentDetail.updatedAt}\r\n                  </label>\r\n                </div>\r\n              </fieldset>\r\n\r\n              <hr />\r\n\r\n              {/* content body */}\r\n              <div>\r\n                {contentBodySchema.map((elem) => {\r\n                  return (\r\n                    <React.Fragment key={elem.schemaName}>\r\n                      <label htmlFor=\"title\">{elem.schemaName}</label>\r\n\r\n                      {elem.schemaType === \"string\" ? (\r\n                        <input\r\n                          id={elem.schemaName}\r\n                          name={elem.schemaName}\r\n                          type=\"text\"\r\n                          defaultValue={contentDetail.body[elem.schemaName]}\r\n                          onChange={(e) => {\r\n                            handleBodyChange(\r\n                              elem.schemaName,\r\n                              e.currentTarget.value\r\n                            );\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n\r\n                      {elem.schemaType === \"text\" ? (\r\n                        <ReactQuill\r\n                          theme=\"snow\"\r\n                          className=\"bg-white react-quill-editor\"\r\n                          defaultValue={contentDetail.body[elem.schemaName]}\r\n                          onChange={(content, delta, source, editor) => {\r\n                            handleBodyChange(elem.schemaName, editor.getHTML());\r\n                          }}\r\n                        ></ReactQuill>\r\n                      ) : null}\r\n\r\n                      <hr />\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"my-1 text-right\">\r\n          <button onClick={onSubmit} name=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ContentDetailPage;\r\n"],"names":["contentDetailDefault","ContentDetailPage","contentId","useParams","fetchContentDetail","contentDetailResponse","api","contentTypeDetailTrigger","contentTypeDetailResult","triggerPatchContent","patchContentResponse","contentDetail","setContentDetail","useState","contentBodySchema","setContentBodySchema","handleContentDetailChange","event","key","value","prevState","handleBodyChange","onSubmit","res","response","getContentDetail","contentTypeDetailRes","useEffect","jsxs","jsx","elem","React","e","ReactQuill","content","delta","source","editor"],"mappings":"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"}