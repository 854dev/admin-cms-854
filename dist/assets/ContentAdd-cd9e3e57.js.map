{"version":3,"file":"ContentAdd-cd9e3e57.js","sources":["../../src/views/ContentAdd.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\n\r\nimport {\r\n  ContentBodySchema,\r\n  ContentDetail,\r\n  ContentType,\r\n  ID,\r\n} from \"types/common\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport api from \"api/api_rtk\";\r\n\r\nconst contentDetailDefault: ContentDetail = {\r\n  title: \"\",\r\n  contentTypeId: -1,\r\n  contentTypeName: \"\",\r\n  creator: \"\",\r\n  createdAt: \"-\",\r\n  updatedAt: \"-\",\r\n  deletedAt: \"\",\r\n  status: \"draft\",\r\n  body: {},\r\n  tags: [],\r\n};\r\n\r\nfunction ContentAdd() {\r\n  const location = useLocation();\r\n  const [contentType, setcontentType] = useState<number>();\r\n  const {\r\n    data: contentTypeListData,\r\n    error: contentTypeListError,\r\n    isSuccess: contentTypeListSuccess,\r\n    isFetching: contentTypeListIsFetching,\r\n  } = api.useGetContentTypeListQuery({\r\n    page: 1,\r\n    limit: 50,\r\n  });\r\n\r\n  const [contentTypeDetailTrigger, contentTypeDetailResult] =\r\n    api.useLazyGetContentTypeDetailQuery();\r\n\r\n  const [postContentTrigger, postContentResult] = api.usePostContentMutation();\r\n\r\n  const [contentDetail, setContentDetail] =\r\n    useState<ContentDetail>(contentDetailDefault);\r\n\r\n  const [contentBodySchema, setContentBodySchema] = useState<\r\n    ContentBodySchema[]\r\n  >([]);\r\n\r\n  const onChangeContentType = async (\r\n    contentTypeId: ID,\r\n    contentTypeName: string\r\n  ) => {\r\n    setcontentType(contentTypeId);\r\n    getContentTypeDetail(contentTypeId);\r\n  };\r\n\r\n  const getContentTypeDetail = async (id: ID) => {\r\n    const res = await contentTypeDetailTrigger(Number(id)).unwrap();\r\n    setContentBodySchema(res.contentBodySchema);\r\n  };\r\n\r\n  const handleContentDetailChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const key = event.target.name as keyof ContentDetail;\r\n    const value = event.target.value;\r\n\r\n    setContentDetail((prevState) => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const handleBodyChange = (key: string, value: string) => {\r\n    setContentDetail((prevState) => ({\r\n      ...prevState,\r\n      body: { ...prevState.body, [key]: value },\r\n    }));\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const res = await postContentTrigger(contentDetail)\r\n        .unwrap()\r\n        .then((payload) => {\r\n          alert(`성공 : ${payload.message}`);\r\n        })\r\n        .catch((error) => {\r\n          alert(`${JSON.stringify(error.data?.message)}`);\r\n        });\r\n    } catch (e) {\r\n      alert(`rejected`);\r\n    }\r\n  };\r\n\r\n  /** 컨텐츠 타입 페칭 후  1번쨰 선택. 이전페이지에서 넘어왔다면 이미 선택되어 있음 */\r\n  useEffect(() => {\r\n    if (contentTypeListSuccess && contentTypeListData.data.length > 0) {\r\n      const contentTypeIdLocation = location.state?.contentTypeId;\r\n\r\n      const selectedContentType = contentTypeIdLocation\r\n        ? (contentTypeListData.data.find(\r\n            (elem) => elem.contentTypeId === contentTypeIdLocation\r\n          ) as ContentType)\r\n        : contentTypeListData.data[0];\r\n\r\n      setcontentType(selectedContentType.contentTypeId);\r\n      setContentDetail({\r\n        ...contentDetail,\r\n        contentTypeId: selectedContentType.contentTypeId,\r\n        contentTypeName: selectedContentType.contentTypeName,\r\n      });\r\n      getContentTypeDetail(selectedContentType.contentTypeId);\r\n    }\r\n  }, [contentTypeListSuccess, contentTypeListIsFetching]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Breadcrumb */}\r\n      <section className=\"breadcrumb\">\r\n        <h1>Content Add</h1>\r\n      </section>\r\n\r\n      <div className=\"\">\r\n        {/* content type Select */}\r\n        <div className=\"relative p-4 mb-5\">\r\n          {/* Content */}\r\n          <div>\r\n            <div>\r\n              <fieldset>\r\n                <div>\r\n                  <label htmlFor=\"contentTypeSelect\">콘텐츠 타입 선택</label>\r\n                  <select\r\n                    name=\"contentTypeSelect\"\r\n                    onChange={(e: ChangeEvent<HTMLSelectElement>) => {\r\n                      const option = e.currentTarget.options[\r\n                        e.currentTarget.options.selectedIndex\r\n                      ].dataset as {\r\n                        contentTypeId: string;\r\n                        contentTypeName: string;\r\n                      };\r\n                      onChangeContentType(\r\n                        Number(option.contentTypeId),\r\n                        option.contentTypeName\r\n                      );\r\n                    }}\r\n                  >\r\n                    {contentTypeListData ? (\r\n                      <>\r\n                        {contentTypeListData.data.map((elem: ContentType) => (\r\n                          <option\r\n                            selected={elem.contentTypeId === contentType}\r\n                            key={elem.contentTypeId}\r\n                            value={elem.contentTypeId}\r\n                            data-content-type-id={elem.contentTypeId}\r\n                            data-content-type-name={elem.contentTypeName}\r\n                          >\r\n                            {elem.contentTypeName}\r\n                          </option>\r\n                        ))}\r\n                      </>\r\n                    ) : null}\r\n                  </select>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                {/* content meta */}\r\n                <div>\r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <input\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    onChange={handleContentDetailChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"creator\">Creator</label>\r\n                  <input\r\n                    id=\"creator\"\r\n                    name=\"creator\"\r\n                    type=\"text\"\r\n                    onChange={handleContentDetailChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"description\">Description</label>\r\n                  <input\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    onChange={handleContentDetailChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"p-4\">\r\n                  <label className=\"block mb-2\" htmlFor=\"status\">\r\n                    Status\r\n                  </label>\r\n\r\n                  <label>\r\n                    <input\r\n                      onChange={handleContentDetailChange}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"draft\"\r\n                      className={`p-4 ${\r\n                        contentDetail.status === \"draft\"\r\n                          ? \"bg-primary\"\r\n                          : \"bg-secondary\"\r\n                      }`}\r\n                    ></input>\r\n                    draft\r\n                  </label>\r\n\r\n                  <label>\r\n                    <input\r\n                      onChange={handleContentDetailChange}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"publish\"\r\n                      className={`p-4 ${\r\n                        contentDetail.status === \"publish\"\r\n                          ? \"bg-primary\"\r\n                          : \"bg-secondary\"\r\n                      }`}\r\n                    ></input>\r\n                    publish\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <label htmlFor=\"title\">\r\n                    createdAt : {contentDetail.createdAt}\r\n                  </label>\r\n                  <label htmlFor=\"title\">\r\n                    updatedAt : {contentDetail.updatedAt}\r\n                  </label>\r\n                </div>\r\n              </fieldset>\r\n\r\n              <hr />\r\n\r\n              {/* content body */}\r\n              <div>\r\n                {contentBodySchema.map((elem) => {\r\n                  return (\r\n                    <React.Fragment key={elem.schemaName}>\r\n                      <label htmlFor=\"title\">{elem.schemaName}</label>\r\n\r\n                      {elem.schemaType === \"string\" ? (\r\n                        <input\r\n                          id={elem.schemaName}\r\n                          name={elem.schemaName}\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            handleBodyChange(\r\n                              elem.schemaName,\r\n                              e.currentTarget.value\r\n                            );\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n\r\n                      {elem.schemaType === \"text\" ? (\r\n                        <ReactQuill\r\n                          theme=\"snow\"\r\n                          className=\"bg-white react-quill-editor\"\r\n                          onChange={(content, delta, source, editor) => {\r\n                            handleBodyChange(elem.schemaName, editor.getHTML());\r\n                          }}\r\n                        ></ReactQuill>\r\n                      ) : null}\r\n\r\n                      <hr />\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"my-1 text-right\">\r\n          <button onClick={onSubmit} name=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentAdd;\r\n"],"names":["contentDetailDefault","ContentAdd","location","useLocation","contentType","setcontentType","useState","contentTypeListData","contentTypeListError","contentTypeListSuccess","contentTypeListIsFetching","api","contentTypeDetailTrigger","contentTypeDetailResult","postContentTrigger","postContentResult","contentDetail","setContentDetail","contentBodySchema","setContentBodySchema","onChangeContentType","contentTypeId","contentTypeName","getContentTypeDetail","id","res","handleContentDetailChange","event","key","value","prevState","handleBodyChange","onSubmit","payload","error","_a","useEffect","contentTypeIdLocation","selectedContentType","elem","jsx","jsxs","option","Fragment","React","e","ReactQuill","content","delta","source","editor"],"mappings":"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"}